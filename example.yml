project:
  name: zPars test
services:
  - hostname: "<@generateRandomString(<20>)>"
    envVariables:
      NORMAL_ENV: ${MY_COOL_ENV}
      NORMAL_ENV_IN_QUOTES: "${MY_COOL_QUOTED_ENV}"
      MULTIPLE_NESTED_ENVS: "${my_e${my_e${my_env}nv}nv}"

      ESCAPED_VALUE: "\<MY_ESCAPED_VALUE\>"
      ESCAPED_VALUE_DOUBLE: "\<\<MY_ESCAPED_VALUE\>\>"

      STRING_WITH_ENV_INSIDE: "<my super cool string with ${myEnvVar} inside for whatever reason| noop>"

      MULTI_LINE_STRING: |
        \<<ESC
         apEd
         Multi L
         ine
         STRING| upper>
        >

      ONE_FUNCTION: "<@generateRandomString(<20>)>"
      TWO_FUNCTIONS: "<@generateRandomString(<20>)><@generateRandomInt(<1>, <9999>)>"
      NESTED_FUNCTIONS: "<@generateRandomString(<@generateRandomInt(<10>, <50>)>)>"

      ESCAPED_NESTED_FUNCTIONS: "\<@generateRandomString(\<@generateRandomInt(10, 50)\>)\>"
      ESCAPE_TEST: "\< \<\\\\ \\\\\\\\ \\\\\< <\\\\> \\\\\> \\\\\\\\ \\\\\> \>"
      ESCAPE_TEST_WITH_ITEM: "\\\\<sTriNG \\\\ witH, mOdiFiers| title >\\\\"

      NO_WHITESPACE: "<@setVar(<envString>, <this string has no spaces>)>"
      NO_WHITESPACE_2: "<@setVar(<envString>,     <this string also has no spaces>     )>"
      WHITESPACE: "<@setVar(<envString>,    < this string has single space >    )>"
      WHITESPACE_2: "<@setVar(<envString>, <    this string has many spaces     >)>"

      FUNCTION_WITH_ENV_SYNTAX: "<@setVar(<envString>, <this is a named string that contains ${my_env} env syntax>)>"
      FUNCTION_WITH_ESCAPING_IN_PARAM: "<@setVar(<commaString>, <this is a named string\, that contains some lovely commas\, and closing braces \) and backslashes \\\\ what do you think?>)>"

      STRING_ONE_MODIFIER: "<my super cool string| upper>"
      STRING_TWO_MODIFIERS: "<my super cool string| upper | sha512>"

      NESTED_STRINGS_ONE_MODIFIER: "<my super cool <and my nested> strings| upper>"
      NESTED_STRINGS_ONE_NESTED_MODIFIER: "<my super cool <And My NeStED| upper> strings>"

      STRING_ESCAPE: "\<@ some random string $\>"
      STRING_ESCAPE_ONE_MODIFIER: "<\<@ some random string $\>| upper>"

      WRITE_STRING_COMPLEX: "\<@generateRandomString(20)\>"
      WRITE_STRING_COMPLEX_ONE_MODIFIER: "<\<@generateRandomString(20)\>| upper>"

      FUNCTION_ONE_MODIFIER: "<@generateRandomString(<20>)| upper>"
      FUNCTION_TWO_MODIFIERS: "<@generateRandomString(<20>)| upper | sha512>"

      NESTED_FUNCTION_ONE_MODIFIER: "<@generateRandomString(<@generateRandomInt(<10>, <50>)>)| upper>"
      NESTED_FUNCTION_TWO_MODIFIERS: "<@generateRandomString(<@generateRandomInt(<10>, <50>)>)| upper | sha512>"

      NESTED_FUNCTION_ONE_NESTED_MODIFIER: "<@setVar(<myRandomString>, <@generateRandomString(<20>)| upper>)>"
      NESTED_FUNCTION_ONE_NESTED_ONE_NORMAL_MODIFIER: "<@setVar(<myAnotherRandomString>, <@generateRandomString(<20>)| upper>)| sha512>"

      EXISTING_STRING: "<@getVar(myRandomString)>"
      EXISTING_STRING_ONE_MODIFIER: "<@getVar(myRandomString)| lower>"

      QUAD_NESTED_FUNCTIONS: "<@setVar(<megaNestedString>, <@generateRandomString(<@generateRandomInt(<@generateRandomInt(<10>, <50>)>, <@generateRandomInt(<51>, <100>)>)>)>)| upper>"

      FUNCTION_WITH_SUPPORTED_CHARS: "<@setVar(<questionableString>, <this is a \| totally \< valid string that \> should just work \| without any issues \\\\/!@#$%^&*_+{}:\|?\>\<>)| upper>"

      RANDOM_ITEM: <@pickRandom(<random1>, <random2>, <random3>)>

      CURRENT_DATE_UTC: "<@getDatetime(<DD.MM.YYYY>)>"
      CURRENT_DATE_GMT14: "<@getDatetime(<DD.MM.YYYY>, <Etc/GMT-14>)>"
      CURRENT_DATE_TIME_UTC: "<@getDatetime(<DD.MM.YYYY HH:mm:ss>)>"
      CURRENT_DATE_TIME_PRG: "<@getDatetime(<DD.MM.YYYY HH:mm:ss>, <Europe/Prague>)>"

      PASSWORD_PLAIN: "<@generateRandomStringVar(<myPassword>, <30>)>"
      PASSWORD_SHA512: "<@getVar(myPassword)| sha512>"
      PASSWORD_BCRYPT: "<@getVar(myPassword)| bcrypt>"
      PASSWORD_ARGON2: "<@getVar(myPassword)| argon2id>"

      ED25519_KEY_PUB: |
        <@generateED25519Key(<myED25519Key>)>

      ED25519_KEY_PUB_SSH: "<@getVar(myED25519KeyPublicSsh)>"

      ED25519_KEY_PRIVATE: |
        <@getVar(myED25519KeyPrivate)>

      ED25519_KEY_PRIVATE_SSH: |
        <@getVar(myED25519KeyPrivateSsh)>

      RSA_2048_KEY_PUB: |
        <@generateRSA4096Key(<myRSA2048Key>)>

      RSA_2048_KEY_PUB_SSH: "<@getVar(myRSA2048KeyPublicSsh)>"

      RSA_2048_KEY_PRIVATE: |
        <@getVar(myRSA2048KeyPrivate)>

      RSA_4096_KEY_PUB: |
        <@generateRSA4096Key(<myRSA4096Key>)>

      RSA_4096_KEY_PUB_SSH: "<@getVar(myRSA4096KeyPublicSsh)>"

      RSA_4096_KEY_PRIVATE: |
        <@getVar(myRSA4096KeyPrivate)>

      MERCURY_RETROGRADE: "<@mercuryInRetrograde(<mercury is in retrograde>, <mercury is not in retrograde>)| title>"

      BROKEN_KEY_START: |
        this thing will break
        its quite sad
        but it's the truth,
        unless we escape it \<

      BROKEN_KEY_END: |
        I think this wont work
        but just in case...
        Maybe escaping
        using back spaces
        is the norm >
