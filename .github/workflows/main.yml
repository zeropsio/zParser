name: Main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    name: Build && tests for ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: linux amd64
            os: ubuntu-latest
            osEnv: GOOS=linux GOARCH=amd64
            runLint: true
            runTests: true

          - name: linux 386
            os: ubuntu-latest
            osEnv: GOOS=linux GOARCH=386
            runLint: true
            runTests: true

          - name: darwin amd64
            os: macos-latest
            osEnv: GOOS=darwin GOARCH=amd64
            runLint: true
            runTests: true

          - name: darwin arm64
            os: macos-latest
            osEnv: GOOS=darwin GOARCH=arm64
            runLint: false
            runTests: false

          - name: windows amd64
            os: ubuntu-latest
            osEnv: GOOS=windows GOARCH=amd64
            runLint: false
            runTests: false

    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: ~1.19
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        export GOPATH=$HOME/go
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.56.2

    - name: Build
      run: env ${{ matrix.osEnv }} go build -v ./cmd/... ./src/...

    - name: Test
      if: ${{ matrix.runTests }}
      run: env ${{ matrix.osEnv }} go test -v ./cmd/... ./src/...

    - name: Lint
      if: ${{ matrix.runLint }}
      run: env ${{ matrix.osEnv }} golangci-lint run ./cmd/... ./src/... --verbose
